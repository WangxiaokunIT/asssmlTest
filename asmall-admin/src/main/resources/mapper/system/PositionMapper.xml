<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinshang.modular.system.dao.PositionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xinshang.modular.system.model.Position">
        <id column="id" property="id" />
        <result column="dept_id" property="deptId" />
        <result column="parent_id" property="parentId" />
        <result column="code" property="code" />
        <result column="name" property="name" />
        <result column="level" property="level" />
        <result column="sort_num" property="sortNum" />
        <result column="seq" property="seq" />
        <result column="remark" property="remark" />
        <result column="creator" property="creator" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="modifier" property="modifier" />
        <result column="gmt_modified" property="gmtModified" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, dept_id, parent_id, code, name, level, sort_num, seq, remark, creator, gmt_create, modifier, gmt_modified
    </sql>

    <select id="listTree" resultType="com.xinshang.core.node.ZTreeNode">
		select p.id,p.parent_id as parentId,d.name,
		(
		CASE
		WHEN (parent_id = 0 OR parent_id IS NULL) THEN
		'true'
		ELSE
		'false'
		END
		) as isOpen from sys_position p
		left join (select code,name from sys_dict where parent_id in (select id from sys_dict where code='sys_position')) d on p.code=d.code
		where p.dept_id = #{deptId}
	</select>

    <!--根据职位id查询用户 -->
    <select id="getUserByPositonId"  parameterType="java.lang.Integer" resultType="com.xinshang.modular.system.model.User">
        select u.* from sys_position_user pu inner join
        sys_user u on pu.user_id=u.id and u.state <![CDATA[ <> ]]>3
        where pu.position_id=#{positionId} order by u.pin_yin_index asc
    </select>

    <!--查询该职位的所在部门下未加入到该职位的用户 -->
    <select id="getUserByDeptIdExceptByPositionId"  parameterType="java.lang.Integer" resultType="com.xinshang.modular.system.model.User">
        select * from sys_user u inner join
        sys_position p on u.dept_id=p.dept_id and u.state <![CDATA[ <> ]]>3
        where p.id=#{positionId} and u.id not in(
        select user_id from sys_position_user where position_id=#{positionId}
        ) order by u.pin_yin_index asc
	</select>

    <select id="listByUserId" parameterType="int" resultMap="BaseResultMap">
        select
        id, dept_id, parent_id, d.code, d.name, level, sort_num, seq, remark, creator, gmt_create, modifier, gmt_modified
        from sys_position p
        left join (select code,name from sys_dict where parent_id in (select id from sys_dict where code='sys_position')) d on p.code=d.code
        where p.id in(
        select position_id from sys_position_user where user_id=#{userId}
        )
    </select>
    <select id="syncPositionTree" parameterType="java.lang.Integer" resultType="com.xinshang.core.node.ZTreeNode">
        select id,name,type,sum(ifnull(childrenNum,0)) as childrenNum,(case when sum(ifnull(childrenNum,0))>0 then 'true' else 'false' end) as isParent from (
        select p.id,p.name,2 as type,(select count(id) from sys_position where parent_id=p.id) as childrenNum from sys_position p
        where p.parent_id=#{parentId}
		) t group by id,name
    </select>

</mapper>
